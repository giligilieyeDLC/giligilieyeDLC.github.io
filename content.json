{"meta":{"title":"Hexo","subtitle":null,"description":null,"author":"giligiliEyE","url":"http://yoursite.com","root":"/"},"pages":[],"posts":[{"title":"HEXO搭建个人博客部署GitHub完整版","slug":"HEXO搭建个人博客部署GitHub完整版","date":"2019-10-03T02:40:54.000Z","updated":"2019-10-07T06:29:04.552Z","comments":true,"path":"2019/10/03/HEXO搭建个人博客部署GitHub完整版/","link":"","permalink":"http://yoursite.com/2019/10/03/HEXO搭建个人博客部署GitHub完整版/","excerpt":"前言都已经9102年了，博主听信了某位技术大佬的指引心血来潮想搭建一个属于自己的个人blog。本以为大佬们技术过硬只需无脑跟就能一步登天，万万没想到所要面对的是一片刀山火海，道路崎岖不说还巨坑不断，刚从一个坑里爬出来就又是另一个大坑，一路走来经历了砸键盘，摔键盘，啃键盘，拔键帽等一系列无能狂怒（心疼键盘1秒）。但是，博主是一个不畏艰辛，智勇双全，阳光帅气的21世纪好青年，翻山越岭成功搭建起了个人博客，此时此刻我真的想说一句 exp:博主使用的是现在比较主流的方法Hexo搭建个人blog并部署到github，并且是在windows平台搭建的。这里强调一下，还不会fan qiang的小伙伴是无法用本办法搭建blog的。过程中我遇到的大坑都会详细说明并给出解决方案，话不多说我们马上开始。","text":"前言都已经9102年了，博主听信了某位技术大佬的指引心血来潮想搭建一个属于自己的个人blog。本以为大佬们技术过硬只需无脑跟就能一步登天，万万没想到所要面对的是一片刀山火海，道路崎岖不说还巨坑不断，刚从一个坑里爬出来就又是另一个大坑，一路走来经历了砸键盘，摔键盘，啃键盘，拔键帽等一系列无能狂怒（心疼键盘1秒）。但是，博主是一个不畏艰辛，智勇双全，阳光帅气的21世纪好青年，翻山越岭成功搭建起了个人博客，此时此刻我真的想说一句 exp:博主使用的是现在比较主流的方法Hexo搭建个人blog并部署到github，并且是在windows平台搭建的。这里强调一下，还不会fan qiang的小伙伴是无法用本办法搭建blog的。过程中我遇到的大坑都会详细说明并给出解决方案，话不多说我们马上开始。 HEXO安装先给出Hexo官方网站hexo官网链接 Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。 根据官网介绍安装Hexo之前需要安装两个其他的应用程序 [Node.js](https://nodejs.org/en/) [Git](https://git-scm.com/) Node.js内附带一个npm包管理器，我们需要借助npm包管理器来安装Hexo 安装完成后使用win+R组合键输入cmd打开命令行窗口 输入node -v来查看版本号，输入npm -v查看版本号 正确显示版本号后输入下面代码进行安装Hexonpm install -g hexo-cli等待一段时间进行安装，安装完成后输入hexo -v进行验证 hexo就安装完毕了 Blog搭建同样打开命令行，在根目录下输入hexo init &quot;blog&quot;引号内为文件夹名字，这里我起名为blog，引号一定要有接下来请注意第一个大坑要来了这里在某些时候会莫名的卡住，请耐心等待，但等待时间过长（长于5分钟）请关闭命令行窗口，打开我的电脑–&gt;进入c盘–&gt;users–&gt;本机名–&gt;找到blog文件夹整个删除，重新再来.之后如果出现某些问题无法解决时重复上步骤强行续命。clone完成后执行下面代码hexo n &quot;test&quot;建立真正的blog文档（当然这篇文章的标题就是test）打开blog文件夹–&gt;找到source–&gt;_posts如果能找到一个名字为test.md文件则证明搭建成功了。回到命令行，执行cd bloghexo ghexo s这时会出现 根据此条提示打开你的浏览器，输入http://localhost:4000便能进入到自己的blog中，浏览完毕退回到命令行按ctrl+C组合键断开连接。 Markdown文档前方高能，请仔细阅读完再进行操作没错.md文件为Markdown文本，想编写Markdown文本自然也需要工具，博主之前电脑中有NodePad++这款软件，也可以编写markdown文本但必须下载插件才能支持预览。可是，万恶的插件管理器居然不好用，无法下载安装插件不说，连从网上自行下载的插件也识别不了，果断放弃。这里推荐使用主流的Markdown编辑器MarkdownPad2。!!!!!!!但是如果你选择了博主推荐的编辑器，并且你是Windows10的系统，第二个大坑来了这里你会发现同样无法实现预览功能，哈哈哈，被套路了吧。这时根据官方推荐你需要额外安装一个东东Awesomium 1.6.6 SDK. 部署到GitHub当然部署到GitHub必须要有一个GitHub账号，还没有的请自行注册，这里不再演示如何注册来到GitHub主页点击右上角的加号菜单中的new repository新建仓库 注意：这里的仓库名一定是你自己的昵称名.github.io 。其他的命名方式会出现错误，之后别人对你的blog进行访问时就是通过这个来访问的。 博主之前已经注册过该仓库名，这里图片演示时会发出警告。 创建成功后会给出一条地址。 将浏览器最小化回到命令行。 在blog根目录下执行以下命令安装git插件。 `npm install hexo-deployer-git --save` 等待插件安装完成后打开我的电脑中的blog文件夹。 根目录中有一个_config.yml文件，博主是用notepad++打开的，当然也可以用visual studio，vim等软件打开。 滚轮拉倒最下方有一栏deployment 在type冒号后添加git，再在下一行添加一行repo：后面接github网页给出的那条地址。 第三大坑警告 在type，repo，branch冒号后一定要先写一个空格再写相应的内容 回到命令行，执行hexo d命令，开始向远端推。如果命令行提示你输入github账号密码，那么证明你成功完成这博客的部署。你以为这就完了？？？当然并不是所有小伙伴这部分都能成功，如果接下来你的命令行向你发出了一排警告，警告后面跟了一句话。。。Please tell me who you are和一项错误那么ok你中奖了第四大坑这时你需要打开你电脑中的blog文件夹–&gt;.deploy_git–&gt;.git–&gt;用notepad++打开config文件添加一栏【user】如下图，email为github注册邮箱name为昵称。 回到命令行重新执行`hexo d`输入github账号密码，部署成功。 blog文档创作当你还沉浸在成功部署github的喜悦中时，安奈不住内心的冲动立即新建了一篇新的blog，指尖在键盘上飞速的打上文字，并添加上美丽的图片。一切看起来是那么的和谐，一切是那么的美妙。执行hexo d时同样也是成功的，但是当你检查你网页上的blog时一定是这个表情 MMP哦，我图片呢？？？？ 没错最让我痛心棘手的大坑来了 图片在本地显示的好好的，上传后却无法显示 最后一座坑 博主翻遍了所有网上大神的解决方案，通过本地上传图片的解决方案没一个好用。内心一万头草泥马奔腾而过，所以最终只有通过本地图片上传云t图床获取云端图片URL的方法了，但这无形中为博客的制作带来了很大的工作量。 在浏览器上搜索图床，使用什么图床自行选择，在markdown图片编辑的地方插入图片的URL即可显示图片。 鸣谢：感谢大佬CodeSheep的视频教程，b站视频av44544186欢迎一起学习","categories":[],"tags":[]},{"title":"不甘堕落梦想新章 HTML5篇","slug":"不甘堕落梦想新章-HTML5篇","date":"2019-10-02T06:10:32.000Z","updated":"2019-10-06T13:36:09.433Z","comments":true,"path":"2019/10/02/不甘堕落梦想新章-HTML5篇/","link":"","permalink":"http://yoursite.com/2019/10/02/不甘堕落梦想新章-HTML5篇/","excerpt":"HTML","text":"HTML 1 HTML简介特点：超文本标记语言（可编辑图文等）。 解释型语言（不用经过编译）。 标签语言（语言结构为标签）。 标签关键词不区分大小写。 2 HTML语法2.1 HTML5标准模板 2.2 标签的分类 按特点分：分为单标签 与 双标签 。 单标签是指只用一个尖括号就能完成特定功能的标签，同理双标签需要两个。按类型分：分为块状标签 与 内联标签 。 块状标签独占一行且可以包含块状标签与内联标签，内联标签不独占一行且只能包含内联标签。 3 HTML各部分功能HTML根标签中分为两个部分：head部分 以及body部分 head部分主要是为了配置一些文本的属性，不会在页面上显示，比如：设置标题，字符编码集，存放CSS样式等。 body部分会在页面上显示，页面上的图形文字排版均由body中标签实现。","categories":[],"tags":[]}]}